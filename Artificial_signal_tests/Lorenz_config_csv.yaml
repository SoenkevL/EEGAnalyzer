# config file for running experiments using run_fram_bids script
# two levels are used for defining the parameters. experiments and runs. each config can have multiple experiments
# which in turn can have multiple runs
experiments:
  - #checking the full signal for the whole recording time
    # name of the experiment for logging
    name: Lorenz Attractor
    # root bids folder, should end in bids but not necessary, the folder (and subfolders) will be scanned for fif files
    bids_folder: ./example/csv
    # input file type, the type of files that should be treated as valid input files
    input_file_ending: 'Lorenz.csv'
    # annotations for which metrics should be calculated. need to be given as a list with the '-' infront of the option
    # - leaving it empty calcs metrics for the whole file
    # - giving the keyword 'all' calculates it for all annotations in the file (nothing computed if there ar eno annotations)
    annotations_of_interest:

    #if the signal of interest should be epoched, for using the whole file/annotation leave all empty
    epoching:
      #offset in seconds from beginning of file/annotation, leaving it empty fills 0
      start_time:
      #length of the epochs, if left empty the whole file/annotation length will be used
      duration:
      #overlap is used in a sliding window approach to make steps, has to be
      #strictly less than duration or will be set to 0 within computation
      overlap:
      #epochs are done from start to stop with only full intervals beeing calculated, no stop time means end of file/annotation
      stop_time:
    # the name of the output file, has to end with metrics.csv for using the processing notebooks
    outfile_ending: 'metrics.csv'
    # if files which allready exist should be recomputed
    recompute: false
    # different metrics can be applied to the data which are stores in metrics.py, here the name of a viable config needs to be given
    metric_set_name: final-0
    # definition of the different runs for this experiment where montage and filtering can be adapted
    runs:
      -
        # name of the run for debugging
        name: all
        # filter settings to apply to eeg, can be left empty
        # not specifying a l_freq or h_freq means no filtering will be applied for the lower or upper bound
        # filters are defined to filter inbetween l_freq and h_freq, e.g. l_freq=1 and h_freq=4 is a bandpass filter between
        # 1 and 4 hz, l_freq=1, h_freq=none is a highpass filter of 1 hz, l_freq=4, and h_freq=1 is a bandstop filter 1-4 hz
        filter:
          h_freq:
          l_freq:
        # sampling freq of the signal to resample to, can be left empty
        sfreq: 1000
        # montage that should be used, out of 'avg', 'circumferential', 'doublebanana'
        montage: avg
        # folder structure, final results are saved at <root_bids_folder>/metrics<metrics_prefix>/<outfile_ending>
        # should be of form '/<folder1>/<folder2>' can be done with n folders
        metrics_prefix: /Lorenz